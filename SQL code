--SQL code cleaning up Nashville Housing Data


--Create table in PostgreSQL

CREATE TABLE housing_data
(unique_id int,
parcel_id bigint,
land_use VARCHAR (300),
property_address VARCHAR (300),
sale_date VARCHAR (300),
sale_price int,
legal_reference	bigint,
sold_as_vacant VARCHAR (10),
owner_name VARCHAR (400),
owner_address VARCHAR (400),
acreage numeric(4,2),
tax_district VARCHAR (100),
land_value bigint,
building_value bigint,
total_value	bigint,
year_built int,
bedrooms int,
full_bath int,
half_bath int)


--Populate null property address data

SELECT a.parcel_id, a.property_address, b.parcel_id, b.property_address, COALESCE (a.property_address,b.property_address)
FROM housing_data a
JOIN housing_data b
ON a.parcel_id = b.parcel_id
AND a.unique_id <> b.unique_id
WHERE a.property_address is NULL

--above query identifies null values & below query updates them to matching address

UPDATE housing_data
SET property_address = COALESCE (a.property_address,b.property_address)
FROM housing_data a
JOIN housing_data b
ON a.parcel_id = b.parcel_id
AND a.unique_id <> b.unique_id
WHERE a.property_address is NULL


--Breaking out Address into individual columns (address, city, state)

SELECT split_part(owner_address,',',1),
split_part(owner_address,',',2),
split_part(owner_address,',',3)
FROM housing_data

ALTER TABLE housing_data
ADD owner_split_address VARCHAR(250)
 
UPDATE housing_data
SET owner_split_address = split_part(owner_address,',',1)

ALTER TABLE housing_data
ADD owner_split_city VARCHAR(250)

UPDATE housing_data
SET owner_split_city = split_part(owner_address,',',2)


ALTER TABLE housing_data
ADD owner_split_state VARCHAR(250)

UPDATE housing_data
SET owner_split_state = split_part(owner_address,',',3)


-- Change Y and N to Yes and No in "sold_as_vacant" field

SELECT DISTINCT(sold_as_vacant),COUNT(sold_as_vacant)
FROM housing_data
GROUP BY sold_as_vacant
ORDER BY 2

SELECT sold_as_vacant,
CASE WHEN sold_as_vacant = 'Y' THEN 'Yes'
WHEN sold_as_vacant = 'N' THEN 'No'
ELSE sold_as_vacant
END
FROM housing_data

UPDATE housing_data
SET sold_as_vacant = CASE WHEN sold_as_vacant = 'Y' THEN 'Yes'
WHEN sold_as_vacant = 'N' THEN 'No'
ELSE sold_as_vacant
END


--Remove Duplicates 

WITH RowNumCTE AS(
SELECT *, ROW_NUMBER() OVER(
PARTITION BY parcel_id,
		property_address,
		sale_price,
		sale_date,
		legal_reference
		ORDER BY 
		unique_id
		) row_num
FROM housing_data)
DELETE
FROM RowNumCTE
WHERE row_num>1


--Delete unused columns from table

ALTER TABLE housing_data
DROP COLUMN owner_address,
DROP COLUMN tax_district,
DROP COLUMN sale_date





